# 목표
 - 계산기 프로그램 웹 애플리케이션으로 만들기

# 단계
 1. 사용자 요청을 메인 Thread 가 처리하도록 한다.
 2. 사용자 요청이 들어올 때 마다 Thread 를 새로 생성해서 사용자 요청을 처리하도록 한다.
 3. Thread Pool 을 적용해 안정적인 서비스가 가능하도록 한다.

# HTTP
 - 서버와 클라이언트가 웹에서 데이터를 주고 받기 위한 프로토콜 (규약)
 - HTTP/1.1, HTTP/2 는 TCP 기반 동작
 - HTTP/3 는 UDP 기반 동작

# HTTP 특징
 1. 클라이언트 - 서버 모델
 2. 무상태 프로토콜 (Stateless)
  - 서버가 클라이언트 상태를 유지하지 않음
  - 해결책 : Keep - Alive 속성 사용
 3. 비 연결성 (Connectionless)
  - 서버가 클라이언트 요청에 응답을 마치면 맺었던 연결을 끊어 버림
  - 해결책 : 쿠키 (클라이언트에 정보 저장), 세션 (서버에 정보 저장), JWT
 4. HTTP 요청 메소드
  - GET
  - POST
  - PUT
  - PATCH
  - DELETE 등
 5. HTTP 응답 코드
  - 2XX (성공)
  - 3XX (리다이렉션)
  - 4XX (클라이언트 에러)
  - 5XX (서버 에러) 등
 6. HTTP 헤더
  - Content-type
  - Accept
  - Cookie
  - Set-Cookie
  - Authorization 등

# 설계
HttpRequest
 - RequestLine (★)
  (1) HTTP Method
  (2) Path
  (3) QueryString
 - Header
 - Body

HttpResponse
 -